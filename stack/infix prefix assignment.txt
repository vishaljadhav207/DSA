1. Create an empty stack called opstack for keeping operators. Create an empty list for output.
2. Convert the input infix string to a list by using the string method split.
3. Scan the token list from left to right.
o If the token is an operand, append it to the end of the output list.
o If the token is a left parenthesis, push it on the opstack.
o If the token is a right parenthesis, pop the opstack until the
 corresponding left parenthesis is removed. 
Append each operator to the end of the output list.
o If the token is an operator, *, /, +, or -, push it on the opstack. However,
 first remove any operators already on the opstack that have higher or equal
 precedence and append them to the output list.